CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(glew-glhck)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${glew-glhck_SOURCE_DIR}/CMake/modules)

# This is toggled from parent cmake
OPTION(GLEW_USE_GLES1 "Build GLEW with OpenGL ES 1.x support" OFF)
OPTION(GLEW_USE_GLES2 "Build GLEW with OpenGL ES 2.x support" OFF)

# Add definitions for GLES
IF (GLEW_USE_GLES1)
   ADD_DEFINITIONS(-DGLEW_INC_EGL)
   ADD_DEFINITIONS(-DGLEW_USE_LIB_ES11)
ELSEIF (GLEW_USE_GLES2)
   ADD_DEFINITIONS(-DGLEW_INC_EGL)
   ADD_DEFINITIONS(-DGLEW_USE_LIB_ES20)
ENDIF ()

IF (GLEW_USE_GLES1)
   # GLES 1.x
   FIND_PACKAGE(EGL REQUIRED)
   LIST(APPEND GLEW_INCL ${EGL_INCLUDE_DIR})
   LIST(APPEND GLEW_LINK ${EGL_LIBRARY})
   FIND_PACKAGE(GLESv1 REQUIRED)
   LIST(APPEND GLEW_INCL ${GLESv1_INCLUDE_DIR})
   LIST(APPEND GLEW_LINK ${GLESv1_LIBRARY})
ELSEIF (GLEW_USE_GLES2)
   # GLES 2.x
   FIND_PACKAGE(EGL REQUIRED)
   LIST(APPEND GLEW_INCL ${EGL_INCLUDE_DIR})
   LIST(APPEND GLEW_LINK ${EGL_LIBRARY})
   FIND_PACKAGE(GLESv2 REQUIRED)
   LIST(APPEND GLEW_INCL ${GLESv2_INCLUDE_DIR})
   LIST(APPEND GLEW_LINK ${GLESv2_LIBRARY})
ELSE ()
   # OPENGL
   FIND_PACKAGE(OpenGL REQUIRED)
   LIST(APPEND GLEW_INCL ${OPENGL_INCLUDE_DIR})
   LIST(APPEND GLEW_LINK ${OPENGL_gl_LIBRARY})
ENDIF ()

IF (UNIX)
   FIND_LIBRARY(DL_LIBRARY dl)
   MARK_AS_ADVANCED(DL_LIBRARY)
   IF (DL_LIBRARY)
      SET(CMAKE_REQUIRED_LIBRARIES ${DL_LIBRARY})
   ELSE ()
      SET(CMAKE_REQUIRED_LIBRARIES "")
   ENDIF ()
   LIST(APPEND GLEW_LINK ${DL_LIBRARY})
ENDIF ()

IF (UNIX AND (CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX))
   SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
   IF (${CMAKE_VERSION} VERSION_LESS 2.8.9)
      ADD_DEFINITIONS(-fPIC)
   ENDIF ()
ENDIF ()

ADD_DEFINITIONS(-DGLEW_STATIC -DGLEW_NO_GLU)
INCLUDE_DIRECTORIES(include ${GLEW_INCL})
ADD_LIBRARY(glew glew.c)
TARGET_LINK_LIBRARIES(glew ${GLEW_LINK})
